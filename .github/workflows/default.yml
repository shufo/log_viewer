name: Tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [22.2]
        elixir: [1.7.4, 1.8.2, 1.9.4, 1.10.2]
        node: ['10']
    steps:
    # checkout
    - uses: actions/checkout@v2
    # setup environments
    - uses: actions/setup-elixir@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}
    - name: Setup node
      uses: actions/setup-node@v1
      with:
          node-version: ${{ matrix.node }}
    # lint
    - name: lint
      run: |
        mix format --check-formatted || true
    # restore caches
    - uses: actions/cache@v1
      id: mix-cache 
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-mix-
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: install mix deps
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: mix deps.get
    - run: mix compile
    - name: install npm modules
      run: yarn install
    - name: Run Jest
      run: |
        yarn jest
